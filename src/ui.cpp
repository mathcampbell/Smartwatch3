// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.4.1
// LVGL version: 8.3.11
// Project name: SmartWatch

#include "ui.h"
#include "ui_helpers.h"
#include "ui_roundmsgbox.h"  // Include the header for the round message box
#include <Arduino.h>
///////////////////// DEFINITIONS //////////////////




///////////////////// VARIABLES ////////////////////





// SCREEN: ui_MainScreen
void ui_MainScreen_screen_init(void);
lv_obj_t * ui_MainScreen;
void ui_event_MainArcMenu(lv_event_t * e);
lv_obj_t * ui_MainArcMenu;
lv_obj_t * ui_MainSpinner;
lv_obj_t * ui_WiFiLabel;
lv_obj_t * ui_BTLabel;
lv_obj_t * ui_screenselectlabel;
lv_obj_t * ui_WeatherImage;
lv_obj_t * ui_WeatherLabel;
lv_obj_t * ui_MainSpinnerOuter;
lv_obj_t * ui_BatteryArc;
lv_obj_t * img_glow;
lv_obj_t * img_bell;


// SCREEN: ui_ClockScreen
void ui_ClockScreen_screen_init(void);
lv_obj_t * ui_ClockScreen;
void ui_event_MainArcClockMenu(lv_event_t * e);
lv_obj_t * ui_MainArcClockMenu;
lv_obj_t * hour_hand_img;
lv_obj_t * minute_hand_img;
lv_obj_t * second_hand_img;


// SCREEN: ui_MusicControls
void ui_MusicControls_screen_init(void);
lv_obj_t * ui_MusicControls;
void ui_event_MainArcMenuMusic(lv_event_t * e);
lv_obj_t * ui_MainArcMenuMusic;
lv_obj_t * ui_musicartwork;
lv_obj_t * ui_SongTitleLabel;
lv_obj_t * ui_ArtistLabel;
void ui_event_MusicArc(lv_event_t * e);
lv_obj_t * ui_MusicArc;
void ui_event_playbutton(lv_event_t * e);
lv_obj_t * ui_playbutton;
void ui_event_previousbutton(lv_event_t * e);
lv_obj_t * ui_previousbutton;
void ui_event_nextbutton(lv_event_t * e);
lv_obj_t * ui_nextbutton;
void ui_event_MusicVolume(lv_event_t * e);
lv_obj_t * ui_MusicVolume;


// SCREEN: ui_Settings
void ui_Settings_screen_init(void);
lv_obj_t * ui_Settings;
void ui_event_MainArcSettingsMenu(lv_event_t * e);
lv_obj_t * ui_MainArcSettingsMenu;
lv_obj_t * ui____initial_actions0;

///////////////////// TEST LVGL SETTINGS ////////////////////
/* #if LV_COLOR_DEPTH != 16
    #error "LV_COLOR_DEPTH should be 16bit to match SquareLine Studio's settings"
#endif
#if LV_COLOR_16_SWAP !=0
    #error "LV_COLOR_16_SWAP should be 0 to match SquareLine Studio's settings"
#endif */

///////////////////// ANIMATIONS ////////////////////

///////////////////// FUNCTIONS ////////////////////



void ui_event_MainArcMenu(lv_event_t * e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t * target = (lv_obj_t *)lv_event_get_target(e);
    if(event_code == LV_EVENT_VALUE_CHANGED) {
        mainarc_valuechange(e);
    }
    if(event_code == LV_EVENT_RELEASED) {
        mainarc_select(e);
    }
}
void ui_event_MainArcClockMenu(lv_event_t * e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t * target = (lv_obj_t *)lv_event_get_target(e);
    if(event_code == LV_EVENT_VALUE_CHANGED) {
        mainarcclock_valuechange(e);
    }
    if(event_code == LV_EVENT_RELEASED) {
        mainarcclock_select(e);
    }
}
void ui_event_MainArcMenuMusic(lv_event_t * e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t * target = (lv_obj_t *)lv_event_get_target(e);
    if(event_code == LV_EVENT_VALUE_CHANGED) {
        mainarcmusic_valuechange(e);
    }
    if(event_code == LV_EVENT_RELEASED) {
        mainarcmusic_select(e);
    }
}
void ui_event_MusicArc(lv_event_t * e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t * target = (lv_obj_t *)lv_event_get_target(e);
    if(event_code == LV_EVENT_RELEASED) {
        musictrack_release(e);
    }
}
void ui_event_playbutton(lv_event_t * e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t * target = (lv_obj_t *)lv_event_get_target(e);
    if(event_code == LV_EVENT_PRESSED) {
        playbutton_pressed(e);
    }
}
void ui_event_previousbutton(lv_event_t * e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t * target = (lv_obj_t *)lv_event_get_target(e);
    if(event_code == LV_EVENT_PRESSED) {
        prevbutton_pressed(e);
    }
}
void ui_event_nextbutton(lv_event_t * e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t * target = (lv_obj_t *)lv_event_get_target(e);
    if(event_code == LV_EVENT_PRESSED) {
        nextbutton_pressed(e);
    }
}
void ui_event_MusicVolume(lv_event_t * e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t * target = (lv_obj_t *)lv_event_get_target(e);
    if(event_code == LV_EVENT_RELEASED) {
        musictrack_release(e);
    }
}
void ui_event_MainArcSettingsMenu(lv_event_t * e)
{
    lv_event_code_t event_code = lv_event_get_code(e);
    lv_obj_t * target = (lv_obj_t *)lv_event_get_target(e);
    if(event_code == LV_EVENT_VALUE_CHANGED) {
        mainarcsettings_valuechange(e);
    }
    if(event_code == LV_EVENT_RELEASED) {
        mainarcsettings_select(e);
    }
}

///////////////////// SCREENS ////////////////////

void ui_init(void)
{
    lv_disp_t * dispp = lv_disp_get_default();
    lv_theme_t * theme = lv_theme_default_init(dispp, lv_palette_main(LV_PALETTE_BLUE), lv_palette_main(LV_PALETTE_RED),
                                               false, LV_FONT_DEFAULT);
    lv_disp_set_theme(dispp, theme);
    ui_MainScreen_screen_init();
    ui_ClockScreen_screen_init();
    ui_MusicControls_screen_init();
    ui_Settings_screen_init();
    ui____initial_actions0 = lv_obj_create(NULL);
    lv_disp_load_scr(ui_MainScreen);


  
}
