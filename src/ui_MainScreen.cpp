// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.4.1
// LVGL version: 8.3.11
// Project name: SmartWatch

#include "ui.h"
#include <Arduino.h>
#include "clock.h"
#include "ui_MainScreen.h"

//lv_obj_t * ui_MainScreen;
lv_obj_t * second_arc;
lv_obj_t * minute_arc;
lv_obj_t * hour_arc;

void ui_MainScreen_screen_init(void)
{
    ui_MainScreen = lv_obj_create(NULL);
    lv_obj_clear_flag(ui_MainScreen, LV_OBJ_FLAG_SCROLLABLE);      /// Flags
    lv_obj_set_style_bg_color(ui_MainScreen, lv_color_hex(0x01070f), LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_bg_opa(ui_MainScreen, 255, LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_bg_grad_color(ui_MainScreen, lv_color_hex(0x000000), LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_bg_main_stop(ui_MainScreen, 100, LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_bg_grad_stop(ui_MainScreen, 255, LV_PART_MAIN | LV_STATE_DEFAULT);
    
    



      // Initialize the main arc menu with glow effect on the indicator
    ui_MainArcMenu = lv_arc_create(ui_MainScreen);
    lv_obj_set_width(ui_MainArcMenu, 200);
    lv_obj_set_height(ui_MainArcMenu, 200);
    lv_obj_set_align(ui_MainArcMenu, LV_ALIGN_CENTER);
    lv_arc_set_range(ui_MainArcMenu, 0, 500);
    lv_arc_set_value(ui_MainArcMenu, 100);
    lv_obj_set_style_arc_width(ui_MainArcMenu, 10, LV_PART_MAIN);
    
    lv_obj_set_style_arc_color(ui_MainArcMenu, lv_color_hex(0x01070f), LV_PART_MAIN);
    //lv_obj_set_style_arc_image_src(ui_MainArcMenu, "A:/lvgl/img/watchface_glow.png", LV_PART_MAIN);
    lv_obj_set_style_arc_color(ui_MainArcMenu, lv_color_hex(0x79CBFC), LV_PART_INDICATOR);

    //lv_obj_set_style_bg_color(ui_MainArcMenu, lv_color_hex(0xFFFFFF), LV_PART_KNOB | LV_STATE_DEFAULT);
   // lv_obj_set_style_bg_opa(ui_MainArcMenu, 0, LV_PART_KNOB | LV_STATE_DEFAULT);
    lv_obj_remove_style(ui_MainArcMenu, NULL, LV_PART_KNOB); // Remove knob
     lv_obj_set_style_arc_width(ui_MainArcMenu, 10, LV_PART_INDICATOR);
    lv_obj_set_style_arc_rounded(ui_MainArcMenu, false, LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_arc_rounded(ui_MainArcMenu, false, LV_PART_INDICATOR | LV_STATE_DEFAULT);
   
    // Main arc style
    static lv_style_t style_main_arc;
    lv_style_init(&style_main_arc);
    //lv_style_set_arc_color(&style_main_arc, lv_color_hex(0x141721));
    //lv_style_set_arc_color(&style_main_arc, lv_color_hex(0x01070f) );
    lv_style_set_arc_opa(&style_main_arc, 255);
    lv_style_set_arc_rounded(&style_main_arc, false); // Ensuring no rounded ends for main arc

    // Indicator arc style with a more intense glow effect
    static lv_style_t style_indicator_glow;
    lv_style_init(&style_indicator_glow);
    lv_style_set_arc_color(&style_indicator_glow, lv_color_hex(0x79CBFC));
    lv_style_set_arc_opa(&style_indicator_glow, 255);
    lv_style_set_arc_width(&style_indicator_glow, 10); // Increased width for visibility
    lv_style_set_arc_rounded(&style_indicator_glow, false); // Ensuring no rounded ends for indicator

    // Enhanced glow effect settings
    //lv_style_set_shadow_color(&style_indicator_glow, lv_color_hex(0x00d5ff));  // Bright cyan glow color
    //lv_style_set_shadow_opa(&style_indicator_glow, 100);  // Full opacity for maximum glow
    //lv_style_set_shadow_width(&style_indicator_glow, 20);  // Increased width to extend glow
    //lv_style_set_shadow_spread(&style_indicator_glow, 10);  // Increased spread for more visible glow
    //lv_style_set_blend_mode(&style_indicator_glow, LV_BLEND_MODE_ADDITIVE);


    // Apply the styles to the arc
    lv_obj_add_style(ui_MainArcMenu, &style_main_arc, LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_add_style(ui_MainArcMenu, &style_indicator_glow, LV_PART_INDICATOR | LV_STATE_DEFAULT | LV_STATE_PRESSED);




    // Create the spinner with glow effect on the indicator
  //  ui_MainSpinnerOuter = lv_spinner_create(ui_MainScreen);
     
  //  lv_obj_set_width(ui_MainSpinnerOuter, 210);
 //   lv_obj_set_height(ui_MainSpinnerOuter, 210);
 //   lv_obj_set_align(ui_MainSpinnerOuter, LV_ALIGN_CENTER);
 //   lv_obj_clear_flag(ui_MainSpinnerOuter, LV_OBJ_FLAG_CLICKABLE);      /// Flags
  //  lv_spinner_set_anim_params(ui_MainSpinnerOuter, 1000, 90);
    //lv_obj_set_style_blend_mode(ui_MainSpinnerOuter, LV_BLEND_MODE_ADDITIVE, LV_PART_MAIN | LV_STATE_DEFAULT);



 
    



ui_BatteryArc = lv_arc_create(ui_MainScreen);
lv_obj_set_size(ui_BatteryArc, 170, 170);
lv_obj_align(ui_BatteryArc, LV_ALIGN_CENTER, 0, 0);
lv_arc_set_bg_angles(ui_BatteryArc, 0, 360);
lv_arc_set_rotation(ui_BatteryArc, 270); // Start from top
lv_arc_set_value(ui_BatteryArc, 100); // Initially 100%
lv_obj_remove_style(ui_BatteryArc, NULL, LV_PART_KNOB); // Remove knob
lv_obj_clear_flag(ui_BatteryArc, LV_OBJ_FLAG_CLICKABLE); // Non-clickable

// Set initial style
lv_obj_set_style_arc_width(ui_BatteryArc, 5, LV_PART_MAIN);
lv_obj_set_style_arc_width(ui_BatteryArc, 5, LV_PART_INDICATOR);
lv_obj_set_style_arc_color(ui_BatteryArc, lv_color_hex(0x01070f), LV_PART_MAIN);
lv_obj_set_style_arc_color(ui_BatteryArc, lv_color_hex(0x00FF00), LV_PART_INDICATOR); // Green color

    ui_WiFiLabel = lv_label_create(ui_MainScreen);
    lv_obj_set_width(ui_WiFiLabel, LV_SIZE_CONTENT);   /// 1
    lv_obj_set_height(ui_WiFiLabel, LV_SIZE_CONTENT);    /// 1
    lv_obj_set_x(ui_WiFiLabel, -35);
    lv_obj_set_y(ui_WiFiLabel, 50);
    lv_obj_set_align(ui_WiFiLabel, LV_ALIGN_CENTER);
    lv_label_set_text(ui_WiFiLabel, LV_SYMBOL_WIFI);
    lv_obj_set_style_text_color(ui_WiFiLabel, lv_color_hex(0x41C7FF), LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_text_opa(ui_WiFiLabel, 255, LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_text_align(ui_WiFiLabel, LV_TEXT_ALIGN_CENTER, LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_text_font(ui_WiFiLabel, &lv_font_montserrat_14, LV_PART_MAIN | LV_STATE_DEFAULT);

    ui_BTLabel = lv_label_create(ui_MainScreen);
    lv_obj_set_width(ui_BTLabel, LV_SIZE_CONTENT);   /// 1
    lv_obj_set_height(ui_BTLabel, LV_SIZE_CONTENT);    /// 1
    lv_obj_set_x(ui_BTLabel, 35);
    lv_obj_set_y(ui_BTLabel, 50);
    lv_obj_set_align(ui_BTLabel, LV_ALIGN_CENTER);
    lv_label_set_text(ui_BTLabel, LV_SYMBOL_BLUETOOTH);
    lv_obj_set_style_text_color(ui_BTLabel, lv_color_hex(0x41C7FF), LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_text_opa(ui_BTLabel, 255, LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_text_align(ui_BTLabel, LV_TEXT_ALIGN_CENTER, LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_text_font(ui_BTLabel, &lv_font_montserrat_14, LV_PART_MAIN | LV_STATE_DEFAULT);

    ui_screenselectlabel = lv_label_create(ui_MainScreen);
    lv_obj_set_width(ui_screenselectlabel, LV_SIZE_CONTENT);   /// 1
    lv_obj_set_height(ui_screenselectlabel, LV_SIZE_CONTENT);    /// 1
    lv_obj_set_align(ui_screenselectlabel, LV_ALIGN_CENTER);
    lv_label_set_text(ui_screenselectlabel, "Main");
    lv_obj_set_style_text_color(ui_screenselectlabel, lv_color_hex(0xFFAD00), LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_text_opa(ui_screenselectlabel, 255, LV_PART_MAIN | LV_STATE_DEFAULT);

    ui_WeatherImage = lv_img_create(ui_MainScreen);
    lv_obj_set_width(ui_WeatherImage, 32);
    lv_obj_set_height(ui_WeatherImage, 32);
    lv_obj_set_x(ui_WeatherImage, -20);
    lv_obj_set_y(ui_WeatherImage, -50);
    lv_obj_set_align(ui_WeatherImage, LV_ALIGN_CENTER);
    lv_obj_add_flag(ui_WeatherImage, LV_OBJ_FLAG_ADV_HITTEST);     /// Flags
    lv_obj_clear_flag(ui_WeatherImage, LV_OBJ_FLAG_SCROLLABLE);      /// Flags

    ui_WeatherLabel = lv_label_create(ui_MainScreen);
    lv_obj_set_width(ui_WeatherLabel, LV_SIZE_CONTENT);   /// 1
    lv_obj_set_height(ui_WeatherLabel, LV_SIZE_CONTENT);    /// 1
    lv_obj_set_x(ui_WeatherLabel, 20);
    lv_obj_set_y(ui_WeatherLabel, -50);
    lv_obj_set_align(ui_WeatherLabel, LV_ALIGN_CENTER);
    lv_label_set_text(ui_WeatherLabel, "?"); // needs to have the symbol Â°
    lv_obj_set_style_text_color(ui_WeatherLabel, lv_color_hex(0x41C7FF), LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_text_opa(ui_WeatherLabel, 255, LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_text_align(ui_WeatherLabel, LV_TEXT_ALIGN_CENTER, LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_text_font(ui_WeatherLabel, &lv_font_montserrat_14, LV_PART_MAIN | LV_STATE_DEFAULT);


/*         //LV_IMG_DECLARE(img_watchface_glow_png);
    img_glow = lv_img_create(ui_MainScreen);
    lv_img_set_src(img_glow, "A:/lvgl/img/watchface_glow.png");
    lv_obj_set_width(img_glow, 240);
    lv_obj_set_height(img_glow, 240);
    lv_obj_align(img_glow, LV_ALIGN_CENTER, 0, 0); 

    //LV_IMG_DECLARE(img_watchface_glow_png);
    
     */



/*     img_bell = lv_img_create(ui_MainScreen);
    //lv_img_set_src(img_bell, &bell_icon);
    lv_img_set_src(img_bell, "A:/lvgl/img/bell_icon.png");
    lv_obj_set_width(img_bell, LV_SIZE_CONTENT);
    lv_obj_set_height(img_bell, LV_SIZE_CONTENT);
    lv_obj_set_x(img_bell, -25) ;
    lv_obj_set_y(img_bell, -100);
    lv_obj_set_align(img_bell, LV_ALIGN_CENTER); */

    lv_obj_add_event_cb(ui_MainArcMenu, ui_event_MainArcMenu, LV_EVENT_ALL, NULL);

       // Apply the styles to the arc
    //lv_obj_add_style(ui_MainArcMenu, &style_main_arc, LV_PART_MAIN | LV_STATE_DEFAULT);
    //lv_obj_add_style(ui_MainArcMenu, &style_indicator_glow, LV_PART_INDICATOR | LV_STATE_DEFAULT | LV_STATE_PRESSED);


    // NEW STUFF: CLOCK

     // Create arcs for seconds, minutes, and hours
    second_arc = lv_arc_create(ui_MainScreen);
    lv_obj_set_size(second_arc, 360, 360);
    lv_obj_center(second_arc);
    lv_arc_set_range(second_arc, 0, 60);
    lv_arc_set_rotation(second_arc, 270);
    lv_arc_set_bg_angles(second_arc, 0, 360);
    lv_arc_set_value(second_arc, 0);
    lv_obj_set_style_arc_opa(second_arc, 255, LV_PART_MAIN);
    lv_obj_set_style_arc_width(second_arc, 5, LV_PART_INDICATOR);
    lv_obj_set_style_arc_width(second_arc, 5, LV_PART_MAIN);
    lv_obj_set_style_arc_color(second_arc, lv_color_hex(0xFB8FFF), LV_PART_INDICATOR);
    lv_obj_remove_style(second_arc, NULL, LV_PART_KNOB); // Remove knob
    lv_obj_set_style_arc_color(second_arc, lv_color_hex(0x01070f), LV_PART_MAIN);
    lv_obj_clear_flag(second_arc, LV_OBJ_FLAG_CLICKABLE);
    lv_obj_set_style_arc_rounded(second_arc, false, LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_arc_rounded(second_arc, false, LV_PART_INDICATOR | LV_STATE_DEFAULT);

    minute_arc = lv_arc_create(ui_MainScreen);
    lv_obj_set_size(minute_arc, 340, 340);
    lv_obj_center(minute_arc);
    lv_arc_set_range(minute_arc, 0, 60);
    lv_arc_set_rotation(minute_arc, 270);
    lv_arc_set_bg_angles(minute_arc, 0, 360);
    lv_arc_set_value(minute_arc, 0);
    lv_obj_set_style_arc_opa(minute_arc, 255, LV_PART_MAIN);
    lv_obj_set_style_arc_width(minute_arc, 5, LV_PART_INDICATOR);
    lv_obj_set_style_arc_width(minute_arc, 5, LV_PART_MAIN);
    lv_obj_set_style_arc_color(minute_arc, lv_color_hex(0x8800ff), LV_PART_INDICATOR);
    lv_obj_remove_style(minute_arc, NULL, LV_PART_KNOB); // Remove knob
    lv_obj_set_style_arc_color(minute_arc, lv_color_hex(0x01070f), LV_PART_MAIN);
    lv_obj_clear_flag(minute_arc, LV_OBJ_FLAG_CLICKABLE);
    lv_obj_set_style_arc_rounded(minute_arc, false, LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_arc_rounded(minute_arc, false, LV_PART_INDICATOR | LV_STATE_DEFAULT);

    hour_arc = lv_arc_create(ui_MainScreen);
    lv_obj_set_size(hour_arc, 320, 320);
    lv_obj_center(hour_arc);
    lv_arc_set_range(hour_arc, 0, 12);
    lv_arc_set_rotation(hour_arc, 270);
    lv_arc_set_bg_angles(hour_arc, 0, 360);
    lv_arc_set_value(hour_arc, 0);
    lv_obj_set_style_arc_opa(hour_arc, 255, LV_PART_MAIN);
    lv_obj_set_style_arc_width(hour_arc, 5, LV_PART_INDICATOR);
     lv_obj_set_style_arc_width(hour_arc, 5, LV_PART_MAIN);
    lv_obj_set_style_arc_color(hour_arc, lv_color_hex(0x1245FF), LV_PART_INDICATOR);
    lv_obj_remove_style(hour_arc, NULL, LV_PART_KNOB); // Remove knob
    lv_obj_set_style_arc_color(hour_arc, lv_color_hex(0x01070f), LV_PART_MAIN);
    lv_obj_clear_flag(hour_arc, LV_OBJ_FLAG_CLICKABLE);
    lv_obj_set_style_arc_rounded(hour_arc, false, LV_PART_MAIN | LV_STATE_DEFAULT);
    lv_obj_set_style_arc_rounded(hour_arc, false, LV_PART_INDICATOR | LV_STATE_DEFAULT);

    // Call update to set initial values
    update_main_screen();

    
}

void update_main_screen(void) {
    if (!ui_MainScreen || !lv_obj_is_valid(ui_MainScreen)) {
        // Screen not initialized or not valid
        return;
    }

    // Update arc values
    lv_arc_set_value(second_arc, second_value);
    lv_arc_set_value(minute_arc, minute_value);
    lv_arc_set_value(hour_arc, hour_value % 12); // 0 to 11
    
    // Optionally, refresh the screen
    // lv_obj_invalidate(ui_MainScreen);
}
